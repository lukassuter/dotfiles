{
    // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Console Log": {
      "prefix": "cl",
      "body": "console.log(\"$1\");"
    },
    "React useState": {
      "prefix": "us",
      "body": "const [$1, set$2] = useState($3);"
    },
    "React useEffect": {
      "prefix": "ue",
      "body": "useEffect(() => {\n\t$1\n}, [$2]);"
    },
    "React useMemo": {
      "prefix": "um",
      "body": "useMemo(() => {\n\t$1\n}, [$2]);"
    },
    "React useCallback": {
      "prefix": "uc",
      "body": "useCallback(() => {\n\t$1\n}, [$2]);"
    },
    "React Function Component": {
      "prefix": "rfc",
      "body": [
        "const $1 = () => {",
        "\treturn $2;",
        "};",
        "",
        "export default $1;"
      ]
    },
    "React Function Component with Props": {
      "prefix": "rfcp",
      "body": [
        "interface $1Props {}",
        "",
        "const $2: React.FC<$1Props> = ({ $3 }) => {",
        "\treturn <></>;",
        "};",
        "",
        "export default $2;"
      ]
    }
  }
  